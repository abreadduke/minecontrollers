{
    "name": "General",
    "icon": "minecraft:book",
    "category": "minecontrollers:casm",
    "pages": [
        {
            "type": "patchouli:text",
            "text": "CASM is a simple assembler language based on NASM. It's created to simplify the programming process."
        },
        {
            "type": "patchouli:text",
            "title": "Commands",
            "text": "Execution commands in minecontrollers is very simple. To execute command you need to flash your microcontroller by instructions sequence. $(l:minecontrollers:microcontroller/pinout#special_pins)Here you can know how to do this$().$(br)Every command has limited length - 6 bytes. Every byte performs its function.$(li)$(bold)1 byte$() - $(l:minecontrollers:casm/commands)operation code (opcode)$(). It defines the operation that command will do. Example: MOV, ADD, XOR - all these keywords in CASM defines the opcode."
        },
        {
            "type": "patchouli:text",
            "text": "Number of opcode you can see in opcode table.$(li)$(bold)2 byte$() - modifier. This part defines both arguments of command or one if command use only one argument.$(li2)$(bold)first 4 bits$() - offsets for first and second argument$(li3)$(bold)1-2 bits$() - offset for first operand$(li3)$(bold)3-4 bits$() - offset for second operand$(li2)$(bold)5-6 bits$() - defines will using operands as address link (value 1) or not (value 0)."
        },
        {
            "type": "patchouli:text",
            "text": "First bit - first operand, second - second operand$(li2)$(bold)7-8 bits$() - defines will operand mean register number (value 0) or just a number (value 1). First bit - first operand, second - second operand. $(li)$(bold)3-6 bytes$() - presented as operands. They can be registers, values or links in relation to previous modifiers. 3-4 bytes - first operand, 5-6 - second operand."
        },
        {
            "type": "patchouli:text",
            "text": "All information about offsets and registers codes you can find in next tables."
        },
        {
            "type": "patchouli:text",
            "title": "OFFSETS TABLE",
            "text": "$(bold)0 - NO OFFSET$(br2)1 - OFFSET FROM DATA SEGMENT (DS)$(br2)2 - OFFSET FROM STACK SEGMENT (SS)$(br2)3 - OFFSET FROM EXTERNAL SEGMENT (ES)"
        },
        {
            "type": "patchouli:text",
            "title": "REGISTERS TABLE",
            "text": "$(bold)0 - AX$(br)1 - AH$(br)2 - AL$(br)3 - BX$(br)4 - BH$(br)5 - BL$(br)6 - CX$(br)7 - CH$(br)8 - CL$(br)9 - DX$(br)10 - DH$(br)11 - DL$(br)12 - DI"
        },
        {
            "type": "patchouli:text",
            "title": "REGISTERS TABLE",
            "text": "$(bold)13 - SI$(br)14 - BP$(br)15 - SP$(br)16 - IP$(br)17 - FLAGS$(br)18 - DS$(br)19 - SS$(br)20 - CS$(br)21 - ES$(br)22-85 - PINS$(br)86 - IT"
        }
    ]
}