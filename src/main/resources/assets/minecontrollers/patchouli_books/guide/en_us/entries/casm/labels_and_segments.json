{
    "name": "Labels and Segments",
    "icon": "minecraft:crimson_sign",
    "category": "minecontrollers:casm",
    "pages": [
        {
            "type": "patchouli:text",
            "text": "Labels are an important part of CASM. At the machine level, they don’t actually exist. They’re simply a convenient way to represent offsets relative to segments."
        },
        {
            "title": "Labels",
            "type": "patchouli:text",
            "text": "To declare a label, use:$(br)$(bold)[<label>]:$()$(br)There is also an extended form of this syntax:$(br)$(bold)[<label>]:(optional) (db|dw) [<value>] dup([<repeat_count>])(optional)$()$(br)The second form generates bytes or words (double-bytes) from the given value, repeated with dup. The label will point to the beginning of the data."
        },
        {
            "type": "patchouli:text",
            "text": "CASM automatically sets label offsets relative to $(l:minecontrollers:casm/registers#segments)DS$().$(br)Don't worry, your jumps won’t break, because all jump instructions only support $(l:minecontrollers:casm/registers#segments)CS, SS, and ES$() offsets.$(br)There’s also another way to define a label:$(br)$(bold)[<label>] proc$(br)... code ...$(br)[<label>] endp$(br)$()This moves the procedure code to the end of the current segment and creates a label pointing to it."
        },
        {
            "title": "Segment Labels",
            "type": "patchouli:text",
            "text": "Segment definition:$(br)$(bold)section [<segment>]$()$(br)This simply creates a label in the section table. But unlike regular labels, which contain offsets relative to their segments, these labels store only global program addresses."
        },
        {
            "title": "EXAMPLE",
            "type": "patchouli:text",
            "text": "$(bold)section .text$(br)mov ds, .data$(br)_start:$(br)add ax, [five]$(br)jmp _start$(br)section .data$(br)five: dw 5$(br2)$()In this example, AX is increased by the value stored in the variable \"five.\""
        }
    ]
}