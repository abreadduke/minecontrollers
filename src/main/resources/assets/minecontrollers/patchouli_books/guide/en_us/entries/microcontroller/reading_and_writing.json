{
    "name": "Reading and Writing",
    "icon": "minecontrollers:microcontroller",
    "category": "minecontrollers:microcontroller",
    "pages": [
        {
            "type": "patchouli:text",
			"text": "Microcontrollers can transfer data to each other. This is done through $(l:minecontrollers:microcontroller/pinout#special_pins)32-37 pins$().$(br)You can use 36 pins for writing data and 37 for reading."
        },
        {
            "type": "patchouli:text",
            "title": "Channel Levels",
			"text": "If you have read about $(l:minecontrollers:basics/bundled_wires)Morered cables$(), you probably already know that cable length can affect redstone signal strength when reading or writing data. A cable relay from Morered should be used to avoid data distortion by introducing a fixed signal drop of 2 levels."
        },
        {
            "type": "patchouli:text",
			"text": "This behavior is already taken into account. The microcontroller automatically increases the signal from memory by 2 for both $(l:minecontrollers:microcontroller/pinout#special_pins)numeric pins$(), when $(l:minecontrollers:microcontroller/pinout#special_pins)37 pins$() receieve a redstone signal.$(br2)The next page contains a diagram of these pins."
        },
        {
            "type": "patchouli:image",
            "images": ["minecontrollers:textures/gui/guidebook/io_example.png"],
            "text": "GEN - a redstone clock made with 2 observers. It sets the execution speed"
        },
        {
            "type": "patchouli:text",
            "text": "of instructions.$(br)L1 - the power lever. It is connected to $(l:minecontrollers:microcontroller/pinout#special_pins)pin 41$() and powers every microcontroller.$(br2)L2 - the read lever. Connected to $(l:minecontrollers:microcontroller/pinout#special_pins)pin 39$().$(br2)C1 - the microcontroller we want to read. Since the circuit doesn't include a redstone source for $(l:minecontrollers:microcontroller/pinout#special_pins)pins 32-35$(), the current address being read is 0."
        },
        {
            "type": "patchouli:text",
            "text": "C2 - an intermediate microcontroller that has already been loaded. It powers its pin 6 to activate pin 38 on C3. It also passes signals from its back side to the front, with the exception of pin 39 in order to prevent reading data from controller C3 .$(br2)C3 - the microcontroller we want to write data to from C1."
        },
        {
            "type": "patchouli:text",
			"text": "You can also experiment with the I/O pins. This allows you to copy data between controllers at the hardware level. Using a microcontroller as a disk to expand the memory of your main microcontroller is another option."
        },
        {
            "type": "patchouli:image",
            "images": ["minecontrollers:textures/gui/guidebook/io_example_2.png"]
        }
    ]
}